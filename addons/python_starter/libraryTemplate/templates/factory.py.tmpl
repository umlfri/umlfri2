from weakref import WeakValueDictionary

class Factory(object):
    def __init__(self, server):
{% for element in root.descendants %}
{% if element.type_name == 'Interface' and not element.is_abstract %}
        from ..{{ element.namespace.identifier.lower_case }}.{{ element.identifier.lower_case }} import {{ element.identifier.upper_camel_case }}
{% endif %}
{% endfor %}
        
        self.__types = {
{% for element in root.descendants %}
{% if element.type_name == 'Interface' and not element.is_abstract %}
            '{{ element.api_name }}': {{ element.identifier.upper_camel_case }},
{% endif %}
{% endfor %}
        }
        self.__objects = WeakValueDictionary()
        self.__server = server
    
    def __create_instance(self, type, id):
        return self.__types[type](self.__server, id)
    
    def get_instance(self, type, id):
        key = (type, id)
        if key in self.__objects:
            value = self.__objects[key]
        else:
            value = self.__create_instance(type, id)
            self.__objects[key] = value
        
        return value
